---
import { imageTypeStore, type ImageType } from '../stores/imageType';
import crossStitchIcon from '../assets/images/switch_cross-stitch.svg?url';
import pixelIcon from '../assets/images/switch_pixel.svg?url';
import patternIcon from '../assets/images/switch_pattern.svg?url';

const currentType = imageTypeStore.get();
---

<div class="tabs tabs-boxed fixed bottom-4 right-4">
  <button
    id="type-cross-stitch"
    class="tab flex items-center gap-1"
    aria-label="クロスステッチ"
  >
    <img src={crossStitchIcon} alt="クロスステッチ" class="w-8 h-8" data-type="cross-stitch" />
    <span class="text-xs">stitch</span>
  </button>
  <button
    id="type-pixel"
    class="tab flex items-center gap-1"
    aria-label="ピクセルアート"
  >
    <img src={pixelIcon} alt="ピクセルアート" class="w-8 h-8" data-type="pixel" />
    <span class="text-xs">pixel</span>
  </button>
  <button
    id="type-pattern"
    class="tab flex items-center gap-1"
    aria-label="パターン"
  >
    <img src={patternIcon} alt="パターン" class="w-8 h-8" data-type="pattern" />
    <span class="text-xs">pattern</span>
  </button>
</div>

<script>
  import { imageTypeStore, type ImageType } from '../stores/imageType';

  const types: ImageType[] = ['cross-stitch', 'pixel', 'pattern'];

  // 初期状態の設定
  function updateActiveTab(type: ImageType) {
    // すべてのタブからアクティブクラスを削除
    document.querySelectorAll('.tab').forEach((tab) => {
      tab.classList.remove('tab-active');
    });
    // 現在のタイプのタブをアクティブにする
    const activeTab = document.querySelector(`[data-type="${type}"]`)?.closest('.tab');
    if (activeTab) {
      activeTab.classList.add('tab-active');
    }
  }

  // 初期状態を設定
  document.addEventListener('DOMContentLoaded', () => {
    updateActiveTab(imageTypeStore.get());
  });

  // クリックイベントの設定
  document.querySelectorAll('.tab').forEach((tab) => {
    tab.addEventListener('click', () => {
      const type = tab.querySelector('img')?.getAttribute('data-type') as ImageType;
      if (type) {
        // ストアを更新
        imageTypeStore.set(type);
        
        // カスタムイベントを発火
        const event = new CustomEvent('imageTypeChange', {
          detail: { type }
        });
        document.dispatchEvent(event);
      }
    });
  });

  // ストアの変更を監視
  imageTypeStore.subscribe((type) => {
    updateActiveTab(type);
  });
</script> 