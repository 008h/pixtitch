---
import { imageTypeStore, type ImageType } from '../stores/imageType';
import crossStitchIcon from '../assets/images/switch_stitch.svg?url';
import pixelIcon from '../assets/images/switch_pixel.svg?url';
import patternIcon from '../assets/images/switch_pattern.svg?url';

const currentType = imageTypeStore.get();
---

<button id="image-type-toggle" class="group flex items-center gap-x-4 p-4 cursor-pointer border-2 rounded-lg backdrop-blur-lg select-none">
  <img src={crossStitchIcon} alt="クロスステッチ" class="w-6 h-6 transition-all duration-200 select-none" data-type="stitch" />
  <img src={pixelIcon} alt="ピクセルアート" class="w-6 h-6 transition-all duration-200 select-none" data-type="pixel" />
  <img src={patternIcon} alt="パターン" class="w-6 h-6 transition-all duration-200 select-none" data-type="pattern" />
</button>

<script>
  import { imageTypeStore, type ImageType } from '../stores/imageType';

  const types: ImageType[] = ['stitch', 'pixel', 'pattern'];

  // クリックイベントの設定
  const container = document.getElementById('image-type-toggle');
  if (container) {
    container.addEventListener('click', () => {
      const currentType = imageTypeStore.get();
      const currentIndex = types.indexOf(currentType);
      const nextIndex = (currentIndex + 1) % types.length;
      const nextType = types[nextIndex];

      // ストアを更新
      imageTypeStore.set(nextType);
      
      // カスタムイベントを発火
      const event = new CustomEvent('imageTypeChange', {
        detail: { type: nextType }
      });
      document.dispatchEvent(event);
    });
  }

  // ストアの変更を監視して画像のサイズを更新
  imageTypeStore.subscribe((type) => {
    const images = document.querySelectorAll('#image-type-toggle img');
    images.forEach((img) => {
      const imgType = img.getAttribute('data-type');
      img.classList.toggle('scale-140', imgType === type);
      img.classList.toggle('scale-100', imgType !== type);
    });
  });
</script>