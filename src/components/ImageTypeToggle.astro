---
import { imageTypeStore, type ImageType } from '../stores/imageType';
import crossStitchIcon from '../assets/images/switch_cross-stitch.svg?url';
import pixelIcon from '../assets/images/switch_pixel.svg?url';
import patternIcon from '../assets/images/switch_pattern.svg?url';

const currentType = imageTypeStore.get();
---

<div class="fixed bottom-4 right-4">
  <div class="tabs tabs-boxed">
    <div class="tab flex items-center gap-1 cursor-pointer">
      <img src={crossStitchIcon} alt="クロスステッチ" class="w-8 h-8" data-type="stitch" />
    </div>
    <div class="tab flex items-center gap-1 cursor-pointer">
      <img src={pixelIcon} alt="ピクセルアート" class="w-8 h-8" data-type="pixel" />
    </div>
    <div class="tab flex items-center gap-1 cursor-pointer">
      <img src={patternIcon} alt="パターン" class="w-8 h-8" data-type="pattern" />
    </div>
  </div>
</div>

<script>
  import { imageTypeStore, type ImageType } from '../stores/imageType';

  const types: ImageType[] = ['stitch', 'pixel', 'pattern'];

  // 初期状態の設定
  function updateActiveTab(type: ImageType) {
    // すべてのタブからアクティブクラスを削除
    document.querySelectorAll('.tab').forEach((tab) => {
      tab.classList.remove('tab-active');
    });
    // 現在のタイプのタブをアクティブにする
    const activeTab = document.querySelector(`[data-type="${type}"]`)?.closest('.tab');
    if (activeTab) {
      activeTab.classList.add('tab-active');
    }
  }

  // 初期状態を設定
  document.addEventListener('DOMContentLoaded', () => {
    updateActiveTab(imageTypeStore.get());
  });

  // クリックイベントの設定
  const container = document.querySelector('.tabs');
  if (container) {
    container.addEventListener('click', () => {
      const currentType = imageTypeStore.get();
      const currentIndex = types.indexOf(currentType);
      const nextIndex = (currentIndex + 1) % types.length;
      const nextType = types[nextIndex];

      // ストアを更新
      imageTypeStore.set(nextType);
      
      // カスタムイベントを発火
      const event = new CustomEvent('imageTypeChange', {
        detail: { type: nextType }
      });
      document.dispatchEvent(event);
    });
  }

  // ストアの変更を監視
  imageTypeStore.subscribe((type) => {
    updateActiveTab(type);
  });
</script> 